/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gpscalculator;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerListModel;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.io.File;
import java.util.Scanner;
import javax.swing.JPanel;

/**
 *
 * @author Oliver
 */
public class MainDisplayUI extends javax.swing.JFrame {

    final int COMPASS_DIAMETER = 250;//set the size of the compass graphic
    final int OFF_CENTER = 50;//the distance the center of the compass will be off center
    final int OFF_TOP = 30;//the distance the compaass will be from the top of the panel
    
    //useful for a nice demo, and gives the user some idea of what to put in
    final String startSetExample = "58.631164, -3.126118";
    final String destinationSetExample = "50.065636, -5.715750";
            

    /**
     * Creates new form MainUI
     */
    public MainDisplayUI() {
        initComponents();//populates the form
        this.setLocationRelativeTo(null);//so it appears in the center 
        this.setResizable(false);//better this way
        
        //show some example coordinates
        this.startSetTxt.setText(startSetExample);
        this.destinationSetTxt.setText(destinationSetExample);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        telementryPnl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        startSetTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        destinationSetTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        distanceLbl = new javax.swing.JLabel();
        bearingTxt = new javax.swing.JTextField();
        distanceTxt = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 0), new java.awt.Dimension(100, 32767));
        goBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        telementryPnl.setBackground(new java.awt.Color(204, 204, 255));
        telementryPnl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout telementryPnlLayout = new javax.swing.GroupLayout(telementryPnl);
        telementryPnl.setLayout(telementryPnlLayout);
        telementryPnlLayout.setHorizontalGroup(
            telementryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        telementryPnlLayout.setVerticalGroup(
            telementryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 294, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("   Calulate the distance and bearing of one set of co-ordinates to another:");
        jLabel1.setOpaque(true);

        jLabel2.setText("Enter the start set ( in the form latitude, longitude)");

        startSetTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startSetTxtMouseClicked(evt);
            }
        });

        jLabel3.setText("Enter the destination co-ordinates");

        destinationSetTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                destinationSetTxtMouseClicked(evt);
            }
        });

        jLabel4.setText("Bearing to destination (degrees):");

        distanceLbl.setText("Distance to desitnation (meters):");

        bearingTxt.setEditable(false);

        distanceTxt.setEditable(false);

        filler2.setBackground(new java.awt.Color(204, 204, 204));
        filler2.setOpaque(true);

        goBtn.setBackground(new java.awt.Color(204, 255, 204));
        goBtn.setText("GO");
        goBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startSetTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(destinationSetTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(goBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(distanceLbl)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(distanceTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                                            .addComponent(bearingTxt)))))
                            .addComponent(telementryPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addComponent(filler2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startSetTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationSetTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goBtn))
                .addGap(18, 18, 18)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(bearingTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(distanceLbl)
                    .addComponent(distanceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(telementryPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        telementryPnl.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Adds the compass graphic to the form
     * @param evt 
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        compass(0, 0, telementryPnl);//display the compass graphic
    }//GEN-LAST:event_formWindowOpened

    /**
     * Validates user input and performs calculations to work out the bearing and distance between the coordinates input by the user
     * Displays the results in the form and sets the compass to graphically show the bearing 
     * @param evt 
     */
    private void goBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBtnActionPerformed
        String startSet[] = startSetTxt.getText().split(",");//array to hold starting lat and lon input
        String destinationSet[] = destinationSetTxt.getText().split(",");//array to hold destination lat and lon input

        //the input is validated to ensure correct format and data type of input using a try-catch block
        try {
            //comvert Strings to real numbers so calculations can be performed
            double startLat = Double.parseDouble(startSet[0]);
            double startLon = Double.parseDouble(startSet[1]);
            double destinationLat = Double.parseDouble(destinationSet[0]);
            double destinationLon = Double.parseDouble(destinationSet[1]);

            //work out bearing and distance
            int bearing = (int) HaversineFormula.bearing(startLat, startLon, destinationLat, destinationLon);
            double distance = HaversineFormula.distance(startLat, startLon, destinationLat, destinationLon);

            //display results 
            bearingTxt.setText(String.valueOf(bearing));
            distanceTxt.setText(String.valueOf(Math.round(distance)));

            //show the bearing on the compass
            compass(0, bearing, telementryPnl);

        } catch (Exception e) {
            //System.err.println(e);
            JOptionPane.showMessageDialog(null, "Please ensure you have entered lat,lon in both fields", "An error occured", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_goBtnActionPerformed

    /**
     * Selects all the text in the text box when it is clicked on to make it easier for the user to enter a new value
     * @param evt 
     */
    private void startSetTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startSetTxtMouseClicked
        startSetTxt.selectAll();
    }//GEN-LAST:event_startSetTxtMouseClicked

    /**
     * Selects all the text in the text box when it is clicked on to make it easier for the user to enter a new value
     * @param evt 
     */
    private void destinationSetTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_destinationSetTxtMouseClicked
        destinationSetTxt.selectAll();
    }//GEN-LAST:event_destinationSetTxtMouseClicked

    /**
     * Creates/updates a compass display that shows the
     *
     * @param current the current bearing of the sensor - note in this project
     * there is no sensor, so this is just set to north
     * @param waypoint the bearing to the next way-point
     * @param panel the panel to display the compass on
     */
    public void compass(int current, int waypoint, JPanel panel) {
        //set the position of where the compass will appear
        int cornerX = panel.getWidth() / 2 - COMPASS_DIAMETER / 2 + OFF_CENTER;
        int cornerY = OFF_TOP; 
        
        //store the coordinates of the center of the compass
        int centerX = cornerX + COMPASS_DIAMETER / 2;
        int centerY = cornerY + COMPASS_DIAMETER / 2;

        //more variables 
        int currentX;
        int currentY;
        int waypointX;
        int waypointY;

        Graphics g = panel.getGraphics();

        //draw the compass circle 
        g.setColor(Color.black);
        g.drawArc(cornerX - 1, cornerY - 1, COMPASS_DIAMETER + 1, COMPASS_DIAMETER + 1, 0, 360);

        //set the colour of the compass to be light gray
        g.setColor(Color.lightGray);
        g.fillArc(cornerX, cornerY, COMPASS_DIAMETER, COMPASS_DIAMETER, 0, 360);

        //add N, S, W, E labels
        g.setColor(Color.red);
        g.setFont(new Font("Calibri", Font.BOLD, 16));
        g.drawString("N", centerX - 5, cornerY + 20);
        g.setColor(Color.black);//only the N label will be a different colour
        g.drawString("E", cornerX + COMPASS_DIAMETER - 20, centerY + 10);
        g.drawString("S", centerX - 5, cornerY + COMPASS_DIAMETER - 10);
        g.drawString("W", cornerX + 10, centerY + 10);

        //create a 'Key' label
        g.setFont(new Font("Calibri", Font.ITALIC, 18));
        g.drawString("Key:", cornerX - 100, cornerY + COMPASS_DIAMETER / 2 - 30);
        g.setFont(new Font("Calibri", Font.BOLD, 16));

        //work out the coordinates of the start and end of the line that will represent the current bearing of the sensor (no sensor in this case, so it will always be north)
        currentX = centerX + (int) ((double) COMPASS_DIAMETER / 2 * Math.sin(Math.toRadians(current)));
        currentY = centerY - (int) ((double) COMPASS_DIAMETER / 2 * Math.cos(Math.toRadians(current)));

        //draw the current bearing line
        g.setColor(Color.red);
        g.drawLine(centerX, centerY, currentX, currentY);
        g.setColor(Color.red);//draw a couple more lines next to it to make it stand out 
        g.drawLine(centerX + 1, centerY + 1, currentX, currentY + 1);
        g.drawLine(centerX - 1, centerY - 1, currentX, currentY - 1);
        
        //add label to key
        g.drawString("North", cornerX - 102, cornerY + COMPASS_DIAMETER / 2 - 10);

        //work out the coordinates of the start and end of the line that will represent the bearing to the waypoint
        waypointX = centerX + (int) ((double) COMPASS_DIAMETER / 2 * Math.sin(Math.toRadians(waypoint)));
        waypointY = centerY - (int) ((double) COMPASS_DIAMETER / 2 * Math.cos(Math.toRadians(waypoint)));

        //draw the waypoint line
        g.setColor(Color.blue);
        g.drawLine(centerX, centerY, waypointX, waypointY);
        
        //add label to key:
        g.drawString("waypoint", cornerX - 100, cornerY + COMPASS_DIAMETER / 2 + 5);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainDisplayUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainDisplayUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainDisplayUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainDisplayUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainDisplayUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bearingTxt;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField destinationSetTxt;
    private javax.swing.JLabel distanceLbl;
    private javax.swing.JTextField distanceTxt;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton goBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField startSetTxt;
    private javax.swing.JPanel telementryPnl;
    // End of variables declaration//GEN-END:variables
}
